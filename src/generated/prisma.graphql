# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Event implements Node {
  id: ID!
  team: String!
  order: Int!
  time: String
  reps: Int
  weight: Int
  ranking: Int
  createdAt: DateTime!
}

type Team implements Node {
  id: ID!
  name: String!
  category: String!
  members: String!
  finalScore: Int
  createdAt: DateTime!
}


#
# Other Types
#

type AggregateEvent {
  count: Int!
}

type AggregateTeam {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

scalar DateTime

"""
A connection to a list of items.
"""
type EventConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [EventEdge]!
  aggregate: AggregateEvent!
}

input EventCreateInput {
  team: String!
  order: Int!
  time: String
  reps: Int
  weight: Int
  ranking: Int
}

"""
An edge in a connection.
"""
type EventEdge {
  """
  The item at the end of the edge.
  """
  node: Event!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum EventOrderByInput {
  id_ASC
  id_DESC
  team_ASC
  team_DESC
  order_ASC
  order_DESC
  time_ASC
  time_DESC
  reps_ASC
  reps_DESC
  weight_ASC
  weight_DESC
  ranking_ASC
  ranking_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type EventPreviousValues {
  id: ID!
  team: String!
  order: Int!
  time: String
  reps: Int
  weight: Int
  ranking: Int
  createdAt: DateTime!
}

type EventSubscriptionPayload {
  mutation: MutationType!
  node: Event
  updatedFields: [String!]
  previousValues: EventPreviousValues
}

input EventSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [EventSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [EventSubscriptionWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [EventSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: EventWhereInput
}

input EventUpdateInput {
  team: String
  order: Int
  time: String
  reps: Int
  weight: Int
  ranking: Int
}

input EventWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [EventWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [EventWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [EventWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  team: String
  """
  All values that are not equal to given value.
  """
  team_not: String
  """
  All values that are contained in given list.
  """
  team_in: [String!]
  """
  All values that are not contained in given list.
  """
  team_not_in: [String!]
  """
  All values less than the given value.
  """
  team_lt: String
  """
  All values less than or equal the given value.
  """
  team_lte: String
  """
  All values greater than the given value.
  """
  team_gt: String
  """
  All values greater than or equal the given value.
  """
  team_gte: String
  """
  All values containing the given string.
  """
  team_contains: String
  """
  All values not containing the given string.
  """
  team_not_contains: String
  """
  All values starting with the given string.
  """
  team_starts_with: String
  """
  All values not starting with the given string.
  """
  team_not_starts_with: String
  """
  All values ending with the given string.
  """
  team_ends_with: String
  """
  All values not ending with the given string.
  """
  team_not_ends_with: String
  order: Int
  """
  All values that are not equal to given value.
  """
  order_not: Int
  """
  All values that are contained in given list.
  """
  order_in: [Int!]
  """
  All values that are not contained in given list.
  """
  order_not_in: [Int!]
  """
  All values less than the given value.
  """
  order_lt: Int
  """
  All values less than or equal the given value.
  """
  order_lte: Int
  """
  All values greater than the given value.
  """
  order_gt: Int
  """
  All values greater than or equal the given value.
  """
  order_gte: Int
  time: String
  """
  All values that are not equal to given value.
  """
  time_not: String
  """
  All values that are contained in given list.
  """
  time_in: [String!]
  """
  All values that are not contained in given list.
  """
  time_not_in: [String!]
  """
  All values less than the given value.
  """
  time_lt: String
  """
  All values less than or equal the given value.
  """
  time_lte: String
  """
  All values greater than the given value.
  """
  time_gt: String
  """
  All values greater than or equal the given value.
  """
  time_gte: String
  """
  All values containing the given string.
  """
  time_contains: String
  """
  All values not containing the given string.
  """
  time_not_contains: String
  """
  All values starting with the given string.
  """
  time_starts_with: String
  """
  All values not starting with the given string.
  """
  time_not_starts_with: String
  """
  All values ending with the given string.
  """
  time_ends_with: String
  """
  All values not ending with the given string.
  """
  time_not_ends_with: String
  reps: Int
  """
  All values that are not equal to given value.
  """
  reps_not: Int
  """
  All values that are contained in given list.
  """
  reps_in: [Int!]
  """
  All values that are not contained in given list.
  """
  reps_not_in: [Int!]
  """
  All values less than the given value.
  """
  reps_lt: Int
  """
  All values less than or equal the given value.
  """
  reps_lte: Int
  """
  All values greater than the given value.
  """
  reps_gt: Int
  """
  All values greater than or equal the given value.
  """
  reps_gte: Int
  weight: Int
  """
  All values that are not equal to given value.
  """
  weight_not: Int
  """
  All values that are contained in given list.
  """
  weight_in: [Int!]
  """
  All values that are not contained in given list.
  """
  weight_not_in: [Int!]
  """
  All values less than the given value.
  """
  weight_lt: Int
  """
  All values less than or equal the given value.
  """
  weight_lte: Int
  """
  All values greater than the given value.
  """
  weight_gt: Int
  """
  All values greater than or equal the given value.
  """
  weight_gte: Int
  ranking: Int
  """
  All values that are not equal to given value.
  """
  ranking_not: Int
  """
  All values that are contained in given list.
  """
  ranking_in: [Int!]
  """
  All values that are not contained in given list.
  """
  ranking_not_in: [Int!]
  """
  All values less than the given value.
  """
  ranking_lt: Int
  """
  All values less than or equal the given value.
  """
  ranking_lte: Int
  """
  All values greater than the given value.
  """
  ranking_gt: Int
  """
  All values greater than or equal the given value.
  """
  ranking_gte: Int
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
}

input EventWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createTeam(data: TeamCreateInput!): Team!
  createEvent(data: EventCreateInput!): Event!
  updateTeam(data: TeamUpdateInput!, where: TeamWhereUniqueInput!): Team
  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  deleteTeam(where: TeamWhereUniqueInput!): Team
  deleteEvent(where: EventWhereUniqueInput!): Event
  upsertTeam(where: TeamWhereUniqueInput!, create: TeamCreateInput!, update: TeamUpdateInput!): Team!
  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!, update: EventUpdateInput!): Event!
  updateManyTeams(data: TeamUpdateInput!, where: TeamWhereInput): BatchPayload!
  updateManyEvents(data: EventUpdateInput!, where: EventWhereInput): BatchPayload!
  deleteManyTeams(where: TeamWhereInput): BatchPayload!
  deleteManyEvents(where: EventWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team]!
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!
  team(where: TeamWhereUniqueInput!): Team
  event(where: EventWhereUniqueInput!): Event
  teamsConnection(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamConnection!
  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

type Subscription {
  team(where: TeamSubscriptionWhereInput): TeamSubscriptionPayload
  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload
}

"""
A connection to a list of items.
"""
type TeamConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [TeamEdge]!
  aggregate: AggregateTeam!
}

input TeamCreateInput {
  name: String!
  category: String!
  members: String!
  finalScore: Int
}

"""
An edge in a connection.
"""
type TeamEdge {
  """
  The item at the end of the edge.
  """
  node: Team!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TeamOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  category_ASC
  category_DESC
  members_ASC
  members_DESC
  finalScore_ASC
  finalScore_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TeamPreviousValues {
  id: ID!
  name: String!
  category: String!
  members: String!
  finalScore: Int
  createdAt: DateTime!
}

type TeamSubscriptionPayload {
  mutation: MutationType!
  node: Team
  updatedFields: [String!]
  previousValues: TeamPreviousValues
}

input TeamSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TeamSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TeamSubscriptionWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TeamSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TeamWhereInput
}

input TeamUpdateInput {
  name: String
  category: String
  members: String
  finalScore: Int
}

input TeamWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TeamWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TeamWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TeamWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  category: String
  """
  All values that are not equal to given value.
  """
  category_not: String
  """
  All values that are contained in given list.
  """
  category_in: [String!]
  """
  All values that are not contained in given list.
  """
  category_not_in: [String!]
  """
  All values less than the given value.
  """
  category_lt: String
  """
  All values less than or equal the given value.
  """
  category_lte: String
  """
  All values greater than the given value.
  """
  category_gt: String
  """
  All values greater than or equal the given value.
  """
  category_gte: String
  """
  All values containing the given string.
  """
  category_contains: String
  """
  All values not containing the given string.
  """
  category_not_contains: String
  """
  All values starting with the given string.
  """
  category_starts_with: String
  """
  All values not starting with the given string.
  """
  category_not_starts_with: String
  """
  All values ending with the given string.
  """
  category_ends_with: String
  """
  All values not ending with the given string.
  """
  category_not_ends_with: String
  members: String
  """
  All values that are not equal to given value.
  """
  members_not: String
  """
  All values that are contained in given list.
  """
  members_in: [String!]
  """
  All values that are not contained in given list.
  """
  members_not_in: [String!]
  """
  All values less than the given value.
  """
  members_lt: String
  """
  All values less than or equal the given value.
  """
  members_lte: String
  """
  All values greater than the given value.
  """
  members_gt: String
  """
  All values greater than or equal the given value.
  """
  members_gte: String
  """
  All values containing the given string.
  """
  members_contains: String
  """
  All values not containing the given string.
  """
  members_not_contains: String
  """
  All values starting with the given string.
  """
  members_starts_with: String
  """
  All values not starting with the given string.
  """
  members_not_starts_with: String
  """
  All values ending with the given string.
  """
  members_ends_with: String
  """
  All values not ending with the given string.
  """
  members_not_ends_with: String
  finalScore: Int
  """
  All values that are not equal to given value.
  """
  finalScore_not: Int
  """
  All values that are contained in given list.
  """
  finalScore_in: [Int!]
  """
  All values that are not contained in given list.
  """
  finalScore_not_in: [Int!]
  """
  All values less than the given value.
  """
  finalScore_lt: Int
  """
  All values less than or equal the given value.
  """
  finalScore_lte: Int
  """
  All values greater than the given value.
  """
  finalScore_gt: Int
  """
  All values greater than or equal the given value.
  """
  finalScore_gte: Int
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
}

input TeamWhereUniqueInput {
  id: ID
  name: String
}
